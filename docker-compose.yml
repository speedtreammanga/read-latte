version: "3.8"

services:
    nodejs:
        build:
            context: ./express
            dockerfile: Dockerfile
            target: base
        restart: unless-stopped
        ports:
            - 8080:8080
        networks:
            - backend
        environment:
            NODE_ENV: ${NODE_ENV}
            NODE_PORT: ${NODE_PORT}
            NODE_SECRET: ${NODE_SECRET}
            NODE_SESSION_SECRET: ${NODE_SESSION_SECRET}
            MONGO_DB_MAIN: ${MONGO_DB_MAIN}
            MONGO_DB_URI: ${MONGO_DB_URI}
            MONGO_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
            MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
        links:
            - mongo
        depends_on:
            - mongo

    mongo:
        image: mongo
        restart: unless-stopped
        ports:
            - 27017:27017
        volumes:
            - ./data:/data/db
        networks:
            - backend
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

    mongo-express:
        image: mongo-express
        restart: unless-stopped
        ports:
            - 8081:8081
        networks:
            - backend
        environment:
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
            ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_ADMINUSERNAME}
            ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_ADMINPASSWORD}
        links:
            - mongo
        depends_on:
            - mongo
networks:
    backend:
        driver: bridge